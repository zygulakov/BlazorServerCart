@page "/cart"

@using System.Collections.Generic
@using Data
@inject CartState CartState

<div class="cart" style="text-align: -webkit-center">
	<p class="cart-info">
		Thank you for shopping! You will receive an order confirmation via e-mail to confirm this order.
		<br />
		Freight charges on your shopping cart are approximate. You will find that they are very close but we may correct the shipping costs before processing your order.
	</p>
	<h1 class="page-title">Shopping Cart</h1>
	<div class="cart-items">
		@if (items == null)
		{
			<p>Loading...</p>
		}
		else if (items.Count == 0)
		{
			<p>Your cart is empty!</p>
		}
		else
		{
			foreach (var item in items)
			{
				<CartItem item="@item" />
			}
		}
	</div>
	<div class="cart-buttons">
		<TelerikButton >Estimate Shipping</TelerikButton>
		<TelerikButton>CHECKOUT</TelerikButton>
		<TelerikButton>Continue Shopping</TelerikButton>
	</div>
</div>

@code {
	List<Item> items = null;


	protected override void OnInitialized()
	{
		items = CartState.Items;
		base.OnInitialized();
		CartState.OnChange += () => InvokeAsync(StateHasChanged);
	}


	public void Dispose()
	{
		CartState.OnChange -= StateHasChanged;
	}

}
